// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.13.0
// source: protoc/asr.proto

package asr

import (
	context "context"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AsrDecoderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 音频数据
	WavData []byte `protobuf:"bytes,1,opt,name=WavData,proto3" json:"WavData,omitempty"`
	// 数据大小
	WavSize int32 `protobuf:"varint,2,opt,name=WavSize,proto3" json:"WavSize,omitempty"`
	// 是否结束0未结束,1结束
	WavEnd int32 `protobuf:"varint,3,opt,name=WavEnd,proto3" json:"WavEnd,omitempty"`
	// 请求guid
	Guid string `protobuf:"bytes,4,opt,name=Guid,proto3" json:"Guid,omitempty"`
	// AgentId
	AgentId string `protobuf:"bytes,5,opt,name=AgentId,proto3" json:"AgentId,omitempty"`
	// RobotId
	RobotId string `protobuf:"bytes,6,opt,name=RobotId,proto3" json:"RobotId,omitempty"`
	// 语音文件aws s3地址
	WavS3Addr string `protobuf:"bytes,7,opt,name=WavS3Addr,proto3" json:"WavS3Addr,omitempty"`
}

func (x *AsrDecoderRequest) Reset() {
	*x = AsrDecoderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_asr_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AsrDecoderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsrDecoderRequest) ProtoMessage() {}

func (x *AsrDecoderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_asr_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsrDecoderRequest.ProtoReflect.Descriptor instead.
func (*AsrDecoderRequest) Descriptor() ([]byte, []int) {
	return file_protoc_asr_proto_rawDescGZIP(), []int{0}
}

func (x *AsrDecoderRequest) GetWavData() []byte {
	if x != nil {
		return x.WavData
	}
	return nil
}

func (x *AsrDecoderRequest) GetWavSize() int32 {
	if x != nil {
		return x.WavSize
	}
	return 0
}

func (x *AsrDecoderRequest) GetWavEnd() int32 {
	if x != nil {
		return x.WavEnd
	}
	return 0
}

func (x *AsrDecoderRequest) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *AsrDecoderRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *AsrDecoderRequest) GetRobotId() string {
	if x != nil {
		return x.RobotId
	}
	return ""
}

func (x *AsrDecoderRequest) GetWavS3Addr() string {
	if x != nil {
		return x.WavS3Addr
	}
	return ""
}

type AsrResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 请求guid
	Guid string `protobuf:"bytes,1,opt,name=Guid,proto3" json:"Guid,omitempty"`
	// 返回信息
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// 错误码
	ErrCode int32 `protobuf:"varint,3,opt,name=ErrCode,proto3" json:"ErrCode,omitempty"`
	// 其他信息
	Extend string `protobuf:"bytes,4,opt,name=Extend,proto3" json:"Extend,omitempty"`
}

func (x *AsrResponse) Reset() {
	*x = AsrResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_asr_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AsrResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsrResponse) ProtoMessage() {}

func (x *AsrResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_asr_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsrResponse.ProtoReflect.Descriptor instead.
func (*AsrResponse) Descriptor() ([]byte, []int) {
	return file_protoc_asr_proto_rawDescGZIP(), []int{1}
}

func (x *AsrResponse) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *AsrResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AsrResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *AsrResponse) GetExtend() string {
	if x != nil {
		return x.Extend
	}
	return ""
}

type HotWordsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 客户Id
	ClientId string `protobuf:"bytes,1,opt,name=ClientId,proto3" json:"ClientId,omitempty"`
	// ??
	AddClient int32 `protobuf:"varint,2,opt,name=AddClient,proto3" json:"AddClient,omitempty"`
	// 热词
	Words []string `protobuf:"bytes,3,rep,name=Words,proto3" json:"Words,omitempty"`
	// 请求guid
	Guid string `protobuf:"bytes,4,opt,name=Guid,proto3" json:"Guid,omitempty"`
	// 是否是内部调用,默认false不是内部调用
	IsInner bool `protobuf:"varint,5,opt,name=IsInner,proto3" json:"IsInner,omitempty"`
	// 热词添加结果回调
	CallBackAddr string `protobuf:"bytes,6,opt,name=CallBackAddr,proto3" json:"CallBackAddr,omitempty"`
}

func (x *HotWordsRequest) Reset() {
	*x = HotWordsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_asr_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HotWordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HotWordsRequest) ProtoMessage() {}

func (x *HotWordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_asr_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HotWordsRequest.ProtoReflect.Descriptor instead.
func (*HotWordsRequest) Descriptor() ([]byte, []int) {
	return file_protoc_asr_proto_rawDescGZIP(), []int{2}
}

func (x *HotWordsRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *HotWordsRequest) GetAddClient() int32 {
	if x != nil {
		return x.AddClient
	}
	return 0
}

func (x *HotWordsRequest) GetWords() []string {
	if x != nil {
		return x.Words
	}
	return nil
}

func (x *HotWordsRequest) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *HotWordsRequest) GetIsInner() bool {
	if x != nil {
		return x.IsInner
	}
	return false
}

func (x *HotWordsRequest) GetCallBackAddr() string {
	if x != nil {
		return x.CallBackAddr
	}
	return ""
}

type InvalidData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvalidWord string `protobuf:"bytes,1,opt,name=InvalidWord,proto3" json:"InvalidWord,omitempty"`
	ErrorInfo   string `protobuf:"bytes,2,opt,name=ErrorInfo,proto3" json:"ErrorInfo,omitempty"`
}

func (x *InvalidData) Reset() {
	*x = InvalidData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_asr_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidData) ProtoMessage() {}

func (x *InvalidData) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_asr_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidData.ProtoReflect.Descriptor instead.
func (*InvalidData) Descriptor() ([]byte, []int) {
	return file_protoc_asr_proto_rawDescGZIP(), []int{3}
}

func (x *InvalidData) GetInvalidWord() string {
	if x != nil {
		return x.InvalidWord
	}
	return ""
}

func (x *InvalidData) GetErrorInfo() string {
	if x != nil {
		return x.ErrorInfo
	}
	return ""
}

type CbHotWordsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 客户Id
	ClientId string `protobuf:"bytes,1,opt,name=ClientId,proto3" json:"ClientId,omitempty"`
	// 请求guid
	Guid string `protobuf:"bytes,2,opt,name=Guid,proto3" json:"Guid,omitempty"`
	// 错误编码 0：成功 其他失败
	ErrCode int32 `protobuf:"varint,3,opt,name=ErrCode,proto3" json:"ErrCode,omitempty"`
	// 返回信息
	Message string `protobuf:"bytes,4,opt,name=Message,proto3" json:"Message,omitempty"`
	// 有效热词
	Valid []string `protobuf:"bytes,5,rep,name=Valid,proto3" json:"Valid,omitempty"`
	// 无效热词
	Invalid []*InvalidData `protobuf:"bytes,6,rep,name=Invalid,proto3" json:"Invalid,omitempty"`
}

func (x *CbHotWordsRequest) Reset() {
	*x = CbHotWordsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_asr_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CbHotWordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CbHotWordsRequest) ProtoMessage() {}

func (x *CbHotWordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_asr_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CbHotWordsRequest.ProtoReflect.Descriptor instead.
func (*CbHotWordsRequest) Descriptor() ([]byte, []int) {
	return file_protoc_asr_proto_rawDescGZIP(), []int{4}
}

func (x *CbHotWordsRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *CbHotWordsRequest) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *CbHotWordsRequest) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *CbHotWordsRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CbHotWordsRequest) GetValid() []string {
	if x != nil {
		return x.Valid
	}
	return nil
}

func (x *CbHotWordsRequest) GetInvalid() []*InvalidData {
	if x != nil {
		return x.Invalid
	}
	return nil
}

type HotWordsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 请求guid
	Guid string `protobuf:"bytes,1,opt,name=Guid,proto3" json:"Guid,omitempty"`
	// 返回信息
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// 错误编码
	ErrCode int32 `protobuf:"varint,3,opt,name=ErrCode,proto3" json:"ErrCode,omitempty"`
	// 其他信息
	Extend string `protobuf:"bytes,4,opt,name=Extend,proto3" json:"Extend,omitempty"`
}

func (x *HotWordsResponse) Reset() {
	*x = HotWordsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_asr_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HotWordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HotWordsResponse) ProtoMessage() {}

func (x *HotWordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_asr_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HotWordsResponse.ProtoReflect.Descriptor instead.
func (*HotWordsResponse) Descriptor() ([]byte, []int) {
	return file_protoc_asr_proto_rawDescGZIP(), []int{5}
}

func (x *HotWordsResponse) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *HotWordsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HotWordsResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *HotWordsResponse) GetExtend() string {
	if x != nil {
		return x.Extend
	}
	return ""
}

type TextWakeupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RobotId string `protobuf:"bytes,1,opt,name=RobotId,proto3" json:"RobotId,omitempty"`
	// 唤醒请求字符串
	Text string `protobuf:"bytes,2,opt,name=Text,proto3" json:"Text,omitempty"`
	// 请求guid
	Guid string `protobuf:"bytes,3,opt,name=Guid,proto3" json:"Guid,omitempty"`
}

func (x *TextWakeupRequest) Reset() {
	*x = TextWakeupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_asr_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextWakeupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextWakeupRequest) ProtoMessage() {}

func (x *TextWakeupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_asr_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextWakeupRequest.ProtoReflect.Descriptor instead.
func (*TextWakeupRequest) Descriptor() ([]byte, []int) {
	return file_protoc_asr_proto_rawDescGZIP(), []int{6}
}

func (x *TextWakeupRequest) GetRobotId() string {
	if x != nil {
		return x.RobotId
	}
	return ""
}

func (x *TextWakeupRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TextWakeupRequest) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

type WakeupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 0为未唤醒,1为唤醒,<0为异常
	Code int32 `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	// 唤醒调用返回信息
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	// 请求guid
	Guid string `protobuf:"bytes,3,opt,name=Guid,proto3" json:"Guid,omitempty"`
	// 其他信息
	Extend string `protobuf:"bytes,4,opt,name=Extend,proto3" json:"Extend,omitempty"`
}

func (x *WakeupResponse) Reset() {
	*x = WakeupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_asr_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WakeupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WakeupResponse) ProtoMessage() {}

func (x *WakeupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_asr_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WakeupResponse.ProtoReflect.Descriptor instead.
func (*WakeupResponse) Descriptor() ([]byte, []int) {
	return file_protoc_asr_proto_rawDescGZIP(), []int{7}
}

func (x *WakeupResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WakeupResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WakeupResponse) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *WakeupResponse) GetExtend() string {
	if x != nil {
		return x.Extend
	}
	return ""
}

type SyncWuwRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Robotid string `protobuf:"bytes,1,opt,name=Robotid,proto3" json:"Robotid,omitempty"`
	// 唤醒词数组
	WuwWords []string `protobuf:"bytes,2,rep,name=WuwWords,proto3" json:"WuwWords,omitempty"`
}

func (x *SyncWuwRequest) Reset() {
	*x = SyncWuwRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_asr_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncWuwRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncWuwRequest) ProtoMessage() {}

func (x *SyncWuwRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_asr_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncWuwRequest.ProtoReflect.Descriptor instead.
func (*SyncWuwRequest) Descriptor() ([]byte, []int) {
	return file_protoc_asr_proto_rawDescGZIP(), []int{8}
}

func (x *SyncWuwRequest) GetRobotid() string {
	if x != nil {
		return x.Robotid
	}
	return ""
}

func (x *SyncWuwRequest) GetWuwWords() []string {
	if x != nil {
		return x.WuwWords
	}
	return nil
}

type SyncWuwResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回信息
	Message string `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	// 错误编码
	ErrCode int32 `protobuf:"varint,2,opt,name=ErrCode,proto3" json:"ErrCode,omitempty"` //0:成功 其他:失败
}

func (x *SyncWuwResponse) Reset() {
	*x = SyncWuwResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_asr_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncWuwResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncWuwResponse) ProtoMessage() {}

func (x *SyncWuwResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_asr_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncWuwResponse.ProtoReflect.Descriptor instead.
func (*SyncWuwResponse) Descriptor() ([]byte, []int) {
	return file_protoc_asr_proto_rawDescGZIP(), []int{9}
}

func (x *SyncWuwResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SyncWuwResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

type VersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 版本信息
	Version string `protobuf:"bytes,1,opt,name=Version,proto3" json:"Version,omitempty"`
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_asr_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_asr_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_protoc_asr_proto_rawDescGZIP(), []int{10}
}

func (x *VersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type MessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 请求Id
	Guid string `protobuf:"bytes,1,opt,name=Guid,proto3" json:"Guid,omitempty"`
	// 类型
	Code int32 `protobuf:"varint,2,opt,name=Code,proto3" json:"Code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,3,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *MessageRequest) Reset() {
	*x = MessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_asr_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageRequest) ProtoMessage() {}

func (x *MessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_asr_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageRequest.ProtoReflect.Descriptor instead.
func (*MessageRequest) Descriptor() ([]byte, []int) {
	return file_protoc_asr_proto_rawDescGZIP(), []int{11}
}

func (x *MessageRequest) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *MessageRequest) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MessageRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_protoc_asr_proto protoreflect.FileDescriptor

var file_protoc_asr_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2f, 0x61, 0x73, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x03, 0x61, 0x73, 0x72, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc5, 0x01, 0x0a, 0x11, 0x41, 0x73, 0x72, 0x44, 0x65, 0x63, 0x6f,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x61,
	0x76, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x57, 0x61, 0x76,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x61, 0x76, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x57, 0x61, 0x76, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x57, 0x61, 0x76, 0x45, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x57, 0x61, 0x76, 0x45, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x75, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x47, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x57, 0x61, 0x76, 0x53, 0x33, 0x41, 0x64, 0x64, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x57, 0x61, 0x76, 0x53, 0x33, 0x41, 0x64, 0x64, 0x72, 0x22, 0x6d, 0x0a, 0x0b,
	0x41, 0x73, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x47,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x47, 0x75, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x45, 0x72, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x0f,
	0x48, 0x6f, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x41,
	0x64, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x41, 0x64, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x6f, 0x72,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x47, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x47,
	0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x22, 0x0a,
	0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x41, 0x64, 0x64,
	0x72, 0x22, 0x4d, 0x0a, 0x0b, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x20, 0x0a, 0x0b, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x57, 0x6f,
	0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0xb9, 0x01, 0x0a, 0x11, 0x43, 0x62, 0x48, 0x6f, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x47, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x12, 0x2a, 0x0a, 0x07, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x61, 0x73, 0x72, 0x2e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x07, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x22, 0x72, 0x0a, 0x10,
	0x48, 0x6f, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x47, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x47, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x22, 0x55, 0x0a, 0x11, 0x54, 0x65, 0x78, 0x74, 0x57, 0x61, 0x6b, 0x65, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x47, 0x75, 0x69, 0x64, 0x22, 0x6a, 0x0a, 0x0e, 0x57, 0x61, 0x6b, 0x65, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x75, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x47, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x22, 0x46, 0x0a, 0x0e, 0x53, 0x79, 0x6e, 0x63, 0x57, 0x75, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x57, 0x75, 0x77, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x57, 0x75, 0x77, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x45, 0x0a, 0x0f, 0x53,
	0x79, 0x6e, 0x63, 0x57, 0x75, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x2b, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x52, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x47, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x32, 0x93, 0x04, 0x0a, 0x0a, 0x41, 0x73, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x3c, 0x0a, 0x0a, 0x41, 0x73, 0x72, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72,
	0x12, 0x16, 0x2e, 0x61, 0x73, 0x72, 0x2e, 0x41, 0x73, 0x72, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x61, 0x73, 0x72, 0x2e, 0x41,
	0x73, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01,
	0x12, 0x3c, 0x0a, 0x0b, 0x41, 0x73, 0x72, 0x48, 0x6f, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x12,
	0x14, 0x2e, 0x61, 0x73, 0x72, 0x2e, 0x48, 0x6f, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x73, 0x72, 0x2e, 0x48, 0x6f, 0x74, 0x57,
	0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x61, 0x73, 0x72, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x13,
	0x41, 0x73, 0x72, 0x48, 0x6f, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x12, 0x16, 0x2e, 0x61, 0x73, 0x72, 0x2e, 0x43, 0x62, 0x48, 0x6f, 0x74, 0x57,
	0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x73,
	0x72, 0x2e, 0x48, 0x6f, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x10, 0x41, 0x73, 0x72, 0x44, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x72, 0x57, 0x61, 0x6b, 0x65, 0x75, 0x70, 0x12, 0x16, 0x2e, 0x61, 0x73, 0x72, 0x2e, 0x41,
	0x73, 0x72, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x13, 0x2e, 0x61, 0x73, 0x72, 0x2e, 0x57, 0x61, 0x6b, 0x65, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x3e, 0x0a, 0x0d, 0x41,
	0x73, 0x72, 0x54, 0x65, 0x78, 0x74, 0x57, 0x61, 0x6b, 0x65, 0x75, 0x70, 0x12, 0x16, 0x2e, 0x61,
	0x73, 0x72, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x57, 0x61, 0x6b, 0x65, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x61, 0x73, 0x72, 0x2e, 0x57, 0x61, 0x6b, 0x65, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0c, 0x53,
	0x79, 0x6e, 0x63, 0x57, 0x75, 0x77, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x13, 0x2e, 0x61, 0x73,
	0x72, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x57, 0x75, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x61, 0x73, 0x72, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x57, 0x75, 0x77, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x10, 0x53, 0x79, 0x6e, 0x63,
	0x49, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x13, 0x2e, 0x61,
	0x73, 0x72, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x61, 0x73, 0x72, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x57, 0x75, 0x77, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x06, 0x5a, 0x04, 0x61, 0x73, 0x72,
	0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protoc_asr_proto_rawDescOnce sync.Once
	file_protoc_asr_proto_rawDescData = file_protoc_asr_proto_rawDesc
)

func file_protoc_asr_proto_rawDescGZIP() []byte {
	file_protoc_asr_proto_rawDescOnce.Do(func() {
		file_protoc_asr_proto_rawDescData = protoimpl.X.CompressGZIP(file_protoc_asr_proto_rawDescData)
	})
	return file_protoc_asr_proto_rawDescData
}

var file_protoc_asr_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_protoc_asr_proto_goTypes = []interface{}{
	(*AsrDecoderRequest)(nil), // 0: asr.AsrDecoderRequest
	(*AsrResponse)(nil),       // 1: asr.AsrResponse
	(*HotWordsRequest)(nil),   // 2: asr.HotWordsRequest
	(*InvalidData)(nil),       // 3: asr.InvalidData
	(*CbHotWordsRequest)(nil), // 4: asr.CbHotWordsRequest
	(*HotWordsResponse)(nil),  // 5: asr.HotWordsResponse
	(*TextWakeupRequest)(nil), // 6: asr.TextWakeupRequest
	(*WakeupResponse)(nil),    // 7: asr.WakeupResponse
	(*SyncWuwRequest)(nil),    // 8: asr.SyncWuwRequest
	(*SyncWuwResponse)(nil),   // 9: asr.SyncWuwResponse
	(*VersionResponse)(nil),   // 10: asr.VersionResponse
	(*MessageRequest)(nil),    // 11: asr.MessageRequest
	(*empty.Empty)(nil),       // 12: google.protobuf.Empty
}
var file_protoc_asr_proto_depIdxs = []int32{
	3,  // 0: asr.CbHotWordsRequest.Invalid:type_name -> asr.InvalidData
	0,  // 1: asr.AsrService.AsrDecoder:input_type -> asr.AsrDecoderRequest
	2,  // 2: asr.AsrService.AsrHotWords:input_type -> asr.HotWordsRequest
	12, // 3: asr.AsrService.GetVersion:input_type -> google.protobuf.Empty
	4,  // 4: asr.AsrService.AsrHotWordsCallback:input_type -> asr.CbHotWordsRequest
	0,  // 5: asr.AsrService.AsrDecoderWakeup:input_type -> asr.AsrDecoderRequest
	6,  // 6: asr.AsrService.AsrTextWakeup:input_type -> asr.TextWakeupRequest
	8,  // 7: asr.AsrService.SyncWuwWords:input_type -> asr.SyncWuwRequest
	11, // 8: asr.AsrService.SyncInnerMessage:input_type -> asr.MessageRequest
	1,  // 9: asr.AsrService.AsrDecoder:output_type -> asr.AsrResponse
	5,  // 10: asr.AsrService.AsrHotWords:output_type -> asr.HotWordsResponse
	10, // 11: asr.AsrService.GetVersion:output_type -> asr.VersionResponse
	5,  // 12: asr.AsrService.AsrHotWordsCallback:output_type -> asr.HotWordsResponse
	7,  // 13: asr.AsrService.AsrDecoderWakeup:output_type -> asr.WakeupResponse
	7,  // 14: asr.AsrService.AsrTextWakeup:output_type -> asr.WakeupResponse
	9,  // 15: asr.AsrService.SyncWuwWords:output_type -> asr.SyncWuwResponse
	9,  // 16: asr.AsrService.SyncInnerMessage:output_type -> asr.SyncWuwResponse
	9,  // [9:17] is the sub-list for method output_type
	1,  // [1:9] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_protoc_asr_proto_init() }
func file_protoc_asr_proto_init() {
	if File_protoc_asr_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protoc_asr_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AsrDecoderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoc_asr_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AsrResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoc_asr_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HotWordsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoc_asr_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoc_asr_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CbHotWordsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoc_asr_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HotWordsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoc_asr_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextWakeupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoc_asr_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WakeupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoc_asr_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncWuwRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoc_asr_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncWuwResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoc_asr_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoc_asr_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protoc_asr_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protoc_asr_proto_goTypes,
		DependencyIndexes: file_protoc_asr_proto_depIdxs,
		MessageInfos:      file_protoc_asr_proto_msgTypes,
	}.Build()
	File_protoc_asr_proto = out.File
	file_protoc_asr_proto_rawDesc = nil
	file_protoc_asr_proto_goTypes = nil
	file_protoc_asr_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AsrServiceClient is the client API for AsrService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AsrServiceClient interface {
	// ASR语音识别
	AsrDecoder(ctx context.Context, opts ...grpc.CallOption) (AsrService_AsrDecoderClient, error)
	// ASR热词添加
	AsrHotWords(ctx context.Context, in *HotWordsRequest, opts ...grpc.CallOption) (*HotWordsResponse, error)
	// ASR版本信息
	GetVersion(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VersionResponse, error)
	// 热词添加结果回调
	AsrHotWordsCallback(ctx context.Context, in *CbHotWordsRequest, opts ...grpc.CallOption) (*HotWordsResponse, error)
	// 唤醒语音识别
	AsrDecoderWakeup(ctx context.Context, opts ...grpc.CallOption) (AsrService_AsrDecoderWakeupClient, error)
	// 唤醒小语种识别
	AsrTextWakeup(ctx context.Context, in *TextWakeupRequest, opts ...grpc.CallOption) (*WakeupResponse, error)
	// 唤醒词服务同步接口
	SyncWuwWords(ctx context.Context, in *SyncWuwRequest, opts ...grpc.CallOption) (*SyncWuwResponse, error)
	// 内部消息同步
	SyncInnerMessage(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*SyncWuwResponse, error)
}

type asrServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAsrServiceClient(cc grpc.ClientConnInterface) AsrServiceClient {
	return &asrServiceClient{cc}
}

func (c *asrServiceClient) AsrDecoder(ctx context.Context, opts ...grpc.CallOption) (AsrService_AsrDecoderClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AsrService_serviceDesc.Streams[0], "/asr.AsrService/AsrDecoder", opts...)
	if err != nil {
		return nil, err
	}
	x := &asrServiceAsrDecoderClient{stream}
	return x, nil
}

type AsrService_AsrDecoderClient interface {
	Send(*AsrDecoderRequest) error
	Recv() (*AsrResponse, error)
	grpc.ClientStream
}

type asrServiceAsrDecoderClient struct {
	grpc.ClientStream
}

func (x *asrServiceAsrDecoderClient) Send(m *AsrDecoderRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *asrServiceAsrDecoderClient) Recv() (*AsrResponse, error) {
	m := new(AsrResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *asrServiceClient) AsrHotWords(ctx context.Context, in *HotWordsRequest, opts ...grpc.CallOption) (*HotWordsResponse, error) {
	out := new(HotWordsResponse)
	err := c.cc.Invoke(ctx, "/asr.AsrService/AsrHotWords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *asrServiceClient) GetVersion(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VersionResponse, error) {
	out := new(VersionResponse)
	err := c.cc.Invoke(ctx, "/asr.AsrService/GetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *asrServiceClient) AsrHotWordsCallback(ctx context.Context, in *CbHotWordsRequest, opts ...grpc.CallOption) (*HotWordsResponse, error) {
	out := new(HotWordsResponse)
	err := c.cc.Invoke(ctx, "/asr.AsrService/AsrHotWordsCallback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *asrServiceClient) AsrDecoderWakeup(ctx context.Context, opts ...grpc.CallOption) (AsrService_AsrDecoderWakeupClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AsrService_serviceDesc.Streams[1], "/asr.AsrService/AsrDecoderWakeup", opts...)
	if err != nil {
		return nil, err
	}
	x := &asrServiceAsrDecoderWakeupClient{stream}
	return x, nil
}

type AsrService_AsrDecoderWakeupClient interface {
	Send(*AsrDecoderRequest) error
	Recv() (*WakeupResponse, error)
	grpc.ClientStream
}

type asrServiceAsrDecoderWakeupClient struct {
	grpc.ClientStream
}

func (x *asrServiceAsrDecoderWakeupClient) Send(m *AsrDecoderRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *asrServiceAsrDecoderWakeupClient) Recv() (*WakeupResponse, error) {
	m := new(WakeupResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *asrServiceClient) AsrTextWakeup(ctx context.Context, in *TextWakeupRequest, opts ...grpc.CallOption) (*WakeupResponse, error) {
	out := new(WakeupResponse)
	err := c.cc.Invoke(ctx, "/asr.AsrService/AsrTextWakeup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *asrServiceClient) SyncWuwWords(ctx context.Context, in *SyncWuwRequest, opts ...grpc.CallOption) (*SyncWuwResponse, error) {
	out := new(SyncWuwResponse)
	err := c.cc.Invoke(ctx, "/asr.AsrService/SyncWuwWords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *asrServiceClient) SyncInnerMessage(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*SyncWuwResponse, error) {
	out := new(SyncWuwResponse)
	err := c.cc.Invoke(ctx, "/asr.AsrService/SyncInnerMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AsrServiceServer is the server API for AsrService service.
type AsrServiceServer interface {
	// ASR语音识别
	AsrDecoder(AsrService_AsrDecoderServer) error
	// ASR热词添加
	AsrHotWords(context.Context, *HotWordsRequest) (*HotWordsResponse, error)
	// ASR版本信息
	GetVersion(context.Context, *empty.Empty) (*VersionResponse, error)
	// 热词添加结果回调
	AsrHotWordsCallback(context.Context, *CbHotWordsRequest) (*HotWordsResponse, error)
	// 唤醒语音识别
	AsrDecoderWakeup(AsrService_AsrDecoderWakeupServer) error
	// 唤醒小语种识别
	AsrTextWakeup(context.Context, *TextWakeupRequest) (*WakeupResponse, error)
	// 唤醒词服务同步接口
	SyncWuwWords(context.Context, *SyncWuwRequest) (*SyncWuwResponse, error)
	// 内部消息同步
	SyncInnerMessage(context.Context, *MessageRequest) (*SyncWuwResponse, error)
}

// UnimplementedAsrServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAsrServiceServer struct {
}

func (*UnimplementedAsrServiceServer) AsrDecoder(AsrService_AsrDecoderServer) error {
	return status.Errorf(codes.Unimplemented, "method AsrDecoder not implemented")
}
func (*UnimplementedAsrServiceServer) AsrHotWords(context.Context, *HotWordsRequest) (*HotWordsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AsrHotWords not implemented")
}
func (*UnimplementedAsrServiceServer) GetVersion(context.Context, *empty.Empty) (*VersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVersion not implemented")
}
func (*UnimplementedAsrServiceServer) AsrHotWordsCallback(context.Context, *CbHotWordsRequest) (*HotWordsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AsrHotWordsCallback not implemented")
}
func (*UnimplementedAsrServiceServer) AsrDecoderWakeup(AsrService_AsrDecoderWakeupServer) error {
	return status.Errorf(codes.Unimplemented, "method AsrDecoderWakeup not implemented")
}
func (*UnimplementedAsrServiceServer) AsrTextWakeup(context.Context, *TextWakeupRequest) (*WakeupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AsrTextWakeup not implemented")
}
func (*UnimplementedAsrServiceServer) SyncWuwWords(context.Context, *SyncWuwRequest) (*SyncWuwResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncWuwWords not implemented")
}
func (*UnimplementedAsrServiceServer) SyncInnerMessage(context.Context, *MessageRequest) (*SyncWuwResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncInnerMessage not implemented")
}

func RegisterAsrServiceServer(s *grpc.Server, srv AsrServiceServer) {
	s.RegisterService(&_AsrService_serviceDesc, srv)
}

func _AsrService_AsrDecoder_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AsrServiceServer).AsrDecoder(&asrServiceAsrDecoderServer{stream})
}

type AsrService_AsrDecoderServer interface {
	Send(*AsrResponse) error
	Recv() (*AsrDecoderRequest, error)
	grpc.ServerStream
}

type asrServiceAsrDecoderServer struct {
	grpc.ServerStream
}

func (x *asrServiceAsrDecoderServer) Send(m *AsrResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *asrServiceAsrDecoderServer) Recv() (*AsrDecoderRequest, error) {
	m := new(AsrDecoderRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _AsrService_AsrHotWords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HotWordsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AsrServiceServer).AsrHotWords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/asr.AsrService/AsrHotWords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AsrServiceServer).AsrHotWords(ctx, req.(*HotWordsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AsrService_GetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AsrServiceServer).GetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/asr.AsrService/GetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AsrServiceServer).GetVersion(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _AsrService_AsrHotWordsCallback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CbHotWordsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AsrServiceServer).AsrHotWordsCallback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/asr.AsrService/AsrHotWordsCallback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AsrServiceServer).AsrHotWordsCallback(ctx, req.(*CbHotWordsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AsrService_AsrDecoderWakeup_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AsrServiceServer).AsrDecoderWakeup(&asrServiceAsrDecoderWakeupServer{stream})
}

type AsrService_AsrDecoderWakeupServer interface {
	Send(*WakeupResponse) error
	Recv() (*AsrDecoderRequest, error)
	grpc.ServerStream
}

type asrServiceAsrDecoderWakeupServer struct {
	grpc.ServerStream
}

func (x *asrServiceAsrDecoderWakeupServer) Send(m *WakeupResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *asrServiceAsrDecoderWakeupServer) Recv() (*AsrDecoderRequest, error) {
	m := new(AsrDecoderRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _AsrService_AsrTextWakeup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TextWakeupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AsrServiceServer).AsrTextWakeup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/asr.AsrService/AsrTextWakeup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AsrServiceServer).AsrTextWakeup(ctx, req.(*TextWakeupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AsrService_SyncWuwWords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncWuwRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AsrServiceServer).SyncWuwWords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/asr.AsrService/SyncWuwWords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AsrServiceServer).SyncWuwWords(ctx, req.(*SyncWuwRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AsrService_SyncInnerMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AsrServiceServer).SyncInnerMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/asr.AsrService/SyncInnerMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AsrServiceServer).SyncInnerMessage(ctx, req.(*MessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AsrService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "asr.AsrService",
	HandlerType: (*AsrServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AsrHotWords",
			Handler:    _AsrService_AsrHotWords_Handler,
		},
		{
			MethodName: "GetVersion",
			Handler:    _AsrService_GetVersion_Handler,
		},
		{
			MethodName: "AsrHotWordsCallback",
			Handler:    _AsrService_AsrHotWordsCallback_Handler,
		},
		{
			MethodName: "AsrTextWakeup",
			Handler:    _AsrService_AsrTextWakeup_Handler,
		},
		{
			MethodName: "SyncWuwWords",
			Handler:    _AsrService_SyncWuwWords_Handler,
		},
		{
			MethodName: "SyncInnerMessage",
			Handler:    _AsrService_SyncInnerMessage_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "AsrDecoder",
			Handler:       _AsrService_AsrDecoder_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "AsrDecoderWakeup",
			Handler:       _AsrService_AsrDecoderWakeup_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "protoc/asr.proto",
}
